---

- name: Create a monitoring Docker network
  docker_network:
    name: "{{ docker_network_name }}"
  tags: prometheus,network

- name: "Create {{ install_prefix }} directory on target host(s)"
  file:
    state: directory
    path: "{{ install_prefix }}"
  tags: prometheus,mkdir

- name: "Create persistent directories for Prometheus container"
  file:
    state: directory
    path: "{{ item }}"
    mode: 0777
  with_items:
    - "{{ install_prefix }}/prometheus"
    - "{{ install_prefix }}/prometheus/conf"
    - "{{ install_prefix }}/prometheus/conf/dynamic"
    - "{{ install_prefix }}/prometheus/data"
  tags: prometheus,mkdir

- name: "Deploy base configuration template for Prometheus container"
  template:
    src: "prometheus.yml"
    dest: "{{ install_prefix }}/prometheus/conf/prometheus.yml"
  tags: prometheus,template


- name: "Run the Prometheus container"
  docker_container:
    name: prometheus
    hostname: "{{ ansible_hostname }}"
    state: started
    pull: yes
    restart: yes
    recreate: yes
    restart_policy: "unless-stopped"
    image: "prom/prometheus"
    volumes:
      - "{{ install_prefix }}/prometheus/conf:/etc/prometheus"
      - "{{ install_prefix }}/prometheus/data:/prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    network_mode: bridge
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - prometheus
    exposed_ports:
      - 9090
    published_ports:
      - 9090:9090
  tags: prometheus,run

- name: "Run the local NodeExporter container"
  docker_container:
    name: nodeexporter
    hostname: "{{ ansible_hostname }}"
    state: started
    pull: yes
    restart: yes
    recreate: yes
    privileged: yes
    restart_policy: "unless-stopped"
    image: "prom/node-exporter"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    network_mode: bridge
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - nodeexporter
    exposed_ports:
      - 9100
    published_ports:
      - 9100:9100
  tags: nodeexporter,run


- name: "Create persistent directories for Grafana container"
  file:
    state: directory
    path: "{{ item }}"
    mode: 0777
  with_items:
    - "{{ install_prefix }}/grafana"
    - "{{ install_prefix }}/grafana/data"
    - "{{ install_prefix }}/grafana/datasources"
    - "{{ install_prefix }}/grafana/dashboards"
    - "{{ install_prefix }}/grafana/scripts"
    - "{{ install_prefix }}/grafana/conf"
  tags: grafana,mkdir

- name: "Deploy dashboards template for Grafana container"
  copy:
    src: "{{ role_path }}/files/grafana/dashboards/node-stat.json"
    dest: "{{ install_prefix }}/grafana/dashboards/node-stat.json"
    mode: 0666
  tags: grafana,template

- name: "Deploy datasources template for Grafana container"
  copy:
    src: "{{ role_path }}/files/grafana/dashboards/node-stat.json"
    dest: "{{ install_prefix }}/grafana/datasources/prometheus.json"
    mode: 0666
  tags: grafana,template

- name: "Deploy main configuration template for Grafana container"
  template:
    src: "grafana.ini.j2"
    dest: "{{ install_prefix }}/grafana/conf/grafana.ini"
    mode: 0666
  tags: grafana,template

- name: "Deploy initialization script for Grafana container"
  copy:
    src: "{{ role_path }}/files/grafana/setup.sh"
    dest: "{{ install_prefix }}/grafana/scripts/"
    mode: 0755
  tags: grafana,template

- name: "Run the Grafana container"
  docker_container:
    name: grafana
    hostname: "{{ ansible_hostname }}"
    state: started
    pull: yes
    restart: yes
    recreate: yes
    restart_policy: "unless-stopped"
    image: "grafana/grafana:latest"
    volumes:
      - "{{ install_prefix }}/grafana/dashboards:/etc/grafana/datasources"
      - "{{ install_prefix }}/grafana/datasources:/etc/grafana/dashboards"
      - "{{ install_prefix }}/grafana/data:/var/lib/grafana"
      - "{{ install_prefix }}/grafana/scripts/setup.sh:/setup.sh"
      - "{{ install_prefix }}/grafana/conf/grafana.ini:/etc/grafana/grafana.ini"
    entrypoint: "/setup.sh"
    env:
      GF_SECURITY_ADMIN_USER: "{{ grafana_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_password }}"
      GF_USERS_ALLOW_SIGN_UP: false
      https_proxy: "http://proxy:looPa9kuo9oohuog6moolo@proxy.mcrrw.me:47864"
    network_mode: bridge
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - prometheus
    exposed_ports:
      - 3000
    published_ports:
      - 3000:3000
  tags: grafana,run


# - name: Test Prometheus ports
#   wait_for:
#     port:
#       - 9090
#     host: "{{ ansible_ssh_host }}"
#     timeout: 120
#     msg: "Check Prometheus port"
#   tags: prometheus,test
